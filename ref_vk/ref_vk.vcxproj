<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{95ac4d50-da09-4f31-9c69-3b3fdc0234e1}</ProjectGuid>
    <RootNamespace>refvk</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <ExternalIncludePath>$(SolutionDir)thirdparty;$(ExternalIncludePath)</ExternalIncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <ExternalIncludePath>$(SolutionDir)thirdparty;$(ExternalIncludePath)</ExternalIncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>false</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;REFVK_EXPORTS;_WINDOWS;_USRDLL;VK_USE_PLATFORM_WIN32_KHR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <ModuleDefinitionFile>ref_vk.def</ModuleDefinitionFile>
      <AdditionalDependencies>winmm.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>false</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;REFVK_EXPORTS;_WINDOWS;_USRDLL;VK_USE_PLATFORM_WIN32_KHR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <ModuleDefinitionFile>ref_vk.def</ModuleDefinitionFile>
      <AdditionalDependencies>winmm.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;REFVK_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <ModuleDefinitionFile>ref_vk.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;REFVK_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <ModuleDefinitionFile>ref_vk.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="..\qcommon\qcommon.h" />
    <ClInclude Include="anorms.h" />
    <ClInclude Include="anormtab.h" />
    <ClInclude Include="q_shared.h" />
    <ClInclude Include="ref.h" />
    <ClInclude Include="shaders\alias_vertexlit_frag.h" />
    <ClInclude Include="shaders\alias_vertexlit_vert.h" />
    <ClInclude Include="shaders\beam_vert.h" />
    <ClInclude Include="shaders\brush_lightmap_vert.h" />
    <ClInclude Include="shaders\generic_colored_frag.h" />
    <ClInclude Include="shaders\particle_frag.h" />
    <ClInclude Include="shaders\particle_vert.h" />
    <ClInclude Include="shaders\screen_colored_vert.h" />
    <ClInclude Include="shaders\screen_textured_frag.h" />
    <ClInclude Include="shaders\screen_textured_vert.h" />
    <ClInclude Include="shaders\sprite_textured_frag.h" />
    <ClInclude Include="shaders\sprite_textured_vert.h" />
    <ClInclude Include="shaders\world_lightmap_frag.h" />
    <ClInclude Include="shaders\world_lightmap_only.h" />
    <ClInclude Include="shaders\world_lightmap_only_frag.h" />
    <ClInclude Include="shaders\world_lightmap_unclamped_frag.h" />
    <ClInclude Include="shaders\world_lightmap_vert.h" />
    <ClInclude Include="shaders\world_sky_frag.h" />
    <ClInclude Include="shaders\world_sky_vert.h" />
    <ClInclude Include="shaders\world_unlit_frag.h" />
    <ClInclude Include="shaders\world_unlit_vert.h" />
    <ClInclude Include="shaders\world_unlit_warped_frag.h" />
    <ClInclude Include="vkw_win.h" />
    <ClInclude Include="vk_data.h" />
    <ClInclude Include="vk_local.h" />
    <ClInclude Include="vk_math.h" />
    <ClInclude Include="vk_model.h" />
    <ClInclude Include="vk_pipeline_data.h" />
    <ClInclude Include="volk.h" />
    <ClInclude Include="winquake.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="q_shared.cpp" />
    <ClCompile Include="q_shwin.cpp" />
    <ClCompile Include="vk_mesh.cpp" />
    <ClCompile Include="vk_particle.cpp" />
    <ClCompile Include="vk_things.cpp" />
    <ClCompile Include="vk_builder.cpp" />
    <ClCompile Include="vk_descriptor.cpp" />
    <ClCompile Include="vk_device.cpp" />
    <ClCompile Include="vkw_imp.cpp" />
    <ClCompile Include="vk_draw.cpp" />
    <ClCompile Include="vk_image.cpp" />
    <ClCompile Include="vk_light.cpp" />
    <ClCompile Include="vk_math.cpp" />
    <ClCompile Include="vk_memory.cpp" />
    <ClCompile Include="vk_model.cpp" />
    <ClCompile Include="vk_pipeline.cpp" />
    <ClCompile Include="vk_rmain.cpp" />
    <ClCompile Include="vk_rmisc.cpp" />
    <ClCompile Include="vk_rsurf.cpp" />
    <ClCompile Include="vk_stage.cpp" />
    <ClCompile Include="vk_swapchain.cpp" />
    <ClCompile Include="vk_warp.cpp" />
    <ClCompile Include="volk.c" />
  </ItemGroup>
  <ItemGroup>
    <None Include="ref_vk.def" />
    <CustomBuild Include="shaders\alias_vertexlit.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn alias_vertexlit_frag -o $(ProjectDir)shaders\alias_vertexlit_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling alias_vertexlit.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\alias_vertexlit_frag.h;%(Outputs)</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn alias_vertexlit_frag -o $(ProjectDir)shaders\alias_vertexlit_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling alias_vertexlit.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\alias_vertexlit_frag.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\alias_vertexlit.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn alias_vertexlit_vert -o $(ProjectDir)shaders\alias_vertexlit_vert.h %(FullPath)</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\alias_vertexlit_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn alias_vertexlit_vert -o $(ProjectDir)shaders\alias_vertexlit_vert.h %(FullPath)</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\alias_vertexlit_vert.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\beam.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn beam_vert -o $(ProjectDir)shaders\beam_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling beam.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\beam_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn beam_vert -o $(ProjectDir)shaders\beam_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling beam.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\beam_vert.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\brush_lightmap.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn brush_lightmap_vert -o $(ProjectDir)shaders\brush_lightmap_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling brush_lightmap.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\brush_lightmap_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn brush_lightmap_vert -o $(ProjectDir)shaders\brush_lightmap_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling brush_lightmap.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\brush_lightmap_vert.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\generic_colored.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn generic_colored_frag -o $(ProjectDir)shaders\generic_colored_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling generic_colored.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\generic_colored_frag.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn generic_colored_frag -o $(ProjectDir)shaders\generic_colored_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling generic_colored.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\generic_colored_frag.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\generic_textureonly.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn generic_textureonly_frag -o $(ProjectDir)shaders\generic_textureonly_frag.h %(FullPath)</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\generic_textureonly_frag.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn generic_textureonly_frag -o $(ProjectDir)shaders\generic_textureonly_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling generic_textureonly.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\generic_textureonly_frag.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\particle.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn particle_frag -o $(ProjectDir)shaders\particle_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling particle.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\particle_frag.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn particle_frag -o $(ProjectDir)shaders\particle_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling particle.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\particle_frag.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\particle.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn particle_vert -o $(ProjectDir)shaders\particle_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling particle.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\particle_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn particle_vert -o $(ProjectDir)shaders\particle_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling particle.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\particle_vert.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\screen_colored.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn screen_colored_vert -o $(ProjectDir)shaders\screen_colored_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling screen_colored.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\screen_colored_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn screen_colored_vert -o $(ProjectDir)shaders\screen_colored_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling screen_colored.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\screen_colored_vert.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\screen_textured.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn screen_textured_frag -o $(ProjectDir)shaders\screen_textured_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling screen_textured.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\screen_textured_frag.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn screen_textured_frag -o $(ProjectDir)shaders\screen_textured_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling screen_textured.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\screen_textured_frag.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\screen_textured.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn screen_textured_vert -o $(ProjectDir)shaders\screen_textured_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling screen_textured.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\screen_textured_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn screen_textured_vert -o $(ProjectDir)shaders\screen_textured_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling screen_textured.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\screen_textured_vert.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\sprite_textured.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn sprite_textured_frag -o $(ProjectDir)shaders\sprite_textured_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling sprite_textured.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\sprite_textured_frag.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn sprite_textured_frag -o $(ProjectDir)shaders\sprite_textured_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling sprite_textured.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\sprite_textured_frag.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\sprite_textured.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn sprite_textured_vert -o $(ProjectDir)shaders\sprite_textured_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling sprite_textured.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\sprite_textured_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn sprite_textured_vert -o $(ProjectDir)shaders\sprite_textured_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling sprite_textured.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\sprite_textured_vert.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\world_lightmap.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn world_lightmap_frag -o $(ProjectDir)shaders\world_lightmap_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling world_lightmap.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\world_lightmap_frag.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn world_lightmap_frag -o $(ProjectDir)shaders\world_lightmap_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling world_lightmap.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\world_lightmap_frag.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\world_lightmap.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn world_lightmap_vert -o $(ProjectDir)shaders\world_lightmap_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling world_lightmap.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\world_lightmap_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn world_lightmap_vert -o $(ProjectDir)shaders\world_lightmap_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling world_lightmap.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\world_lightmap_vert.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\world_lightmap_only.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn world_lightmap_only_frag -o $(ProjectDir)shaders\world_lightmap_only_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling world_lightmap_only.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\world_lightmap_only_frag.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn world_lightmap_only_frag -o $(ProjectDir)shaders\world_lightmap_only_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling world_lightmap_only.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\world_lightmap_only_frag.h</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\world_lightmap_unclamped.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn world_lightmap_unclamped_frag -o $(ProjectDir)shaders\world_lightmap_only_unclamped.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling world_lightmap_unclamped.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\world_lightmap_only_unclamped.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn world_lightmap_unclamped_frag -o $(ProjectDir)shaders\world_lightmap_only_unclamped.h %(FullPath)</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\world_lightmap_only_unclamped.h</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling world_lightmap_unclamped.frag</Message>
    </CustomBuild>
    <CustomBuild Include="shaders\world_sky.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn world_sky_frag -o $(ProjectDir)shaders\world_sky_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling world_sky.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\world_sky_frag.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn world_sky_frag -o $(ProjectDir)shaders\world_sky_frag.h %(FullPath)</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\world_sky_frag.h</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling world_sky.frag</Message>
    </CustomBuild>
    <CustomBuild Include="shaders\world_sky.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn world_sky_vert -o $(ProjectDir)shaders\world_sky_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling world_sky.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\world_sky_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn world_sky_vert -o $(ProjectDir)shaders\world_sky_vert.h %(FullPath)</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\world_sky_vert.h</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling world_sky.vert</Message>
    </CustomBuild>
    <CustomBuild Include="shaders\world_unlit.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn world_unlit_frag -o $(ProjectDir)shaders\world_unlit_frag.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling world_unlit.frag</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\world_unlit_frag.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn world_unlit_frag -o $(ProjectDir)shaders\world_unlit_frag.h %(FullPath)</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\world_unlit_frag.h</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling world_unlit.frag</Message>
    </CustomBuild>
    <CustomBuild Include="shaders\world_unlit.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">glslangValidator --target-env vulkan1.3 --vn world_unlit_vert -o $(ProjectDir)shaders\world_unlit_vert.h %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling world_unlit.vert</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)shaders\world_unlit_vert.h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">glslangValidator --target-env vulkan1.3 --vn world_unlit_vert -o $(ProjectDir)shaders\world_unlit_vert.h %(FullPath)</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)shaders\world_unlit_vert.h</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling world_unlit.vert</Message>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>